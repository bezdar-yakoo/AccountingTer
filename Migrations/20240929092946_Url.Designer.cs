// <auto-generated />
using System;
using AccountingTer.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccountingTer.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240929092946_Url")]
    partial class Url
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.33");

            modelBuilder.Entity("AccountingTer.Models.BalanceEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdded")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OwnerBalanceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("BalanceEvents");
                });

            modelBuilder.Entity("AccountingTer.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Balance")
                        .HasColumnType("REAL");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("AccountingTer.Models.StringProperties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StringProperties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "ID чатов, в которые бот будет присылать дамп базы данных",
                            Key = "IdsForBackupDataBase",
                            Value = "475031431"
                        },
                        new
                        {
                            Id = 2,
                            Description = "час, когда надо присылать статистику и дамп базы данных",
                            Key = "DailyStatisticHour",
                            Value = "23"
                        },
                        new
                        {
                            Id = 3,
                            Description = "ID чатов, в которые бот будет писать статистику в конце дня",
                            Key = "ChatsForStatistic",
                            Value = "475031431"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Ключ и секрет от апи в формате key:secret",
                            Key = "BybitCredentials",
                            Value = "JK3uhAcX7Zh7Puhtbz:aTTCR8cH8ttm4v4lMypDll9FCGExHUsEVHEF"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Ссылка на веб интерфейс",
                            Key = "Url",
                            Value = "https://google.com"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
